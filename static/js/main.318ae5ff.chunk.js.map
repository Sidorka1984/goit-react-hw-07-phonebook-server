{"version":3,"sources":["services/contactsApi.js","redux/operation.js","redux/slices/todo.js","redux/store.js","component/Container/Container.styles.jsx","component/Container/Container.jsx","component/Form/Form.styles.jsx","redux/selectors.js","component/Form/formHoock.jsx","component/Filter/Filter.styles.jsx","component/Filter/Filter.jsx","component/ContactsList/ContactsList.styles.jsx","component/ContactsList/ContactsList.jsx","component/App.js","index.js"],"names":["axios","defaults","baseURL","fetchDeleteContact","id","delete","fetchContact","createAsyncThunk","_","a","rejectWithValue","get","data","addContact","name","number","newContact","contact","post","deleteContact","contactsSlice","createSlice","initialState","items","filter","isLoding","error","reducers","changeFilter","state","action","payload","extraReducers","fulfilled","status","pending","rejected","actions","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","contactsReducer","devTools","process","Containers","styled","div","Title","h1","Container","title","children","TitleSecond","h2","Input","input","Button","button","getFilter","getIsLoading","isLoading","getContacts","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","Form","useState","setName","setNumber","useSelector","selectors","dispatch","useDispatch","nameInputId","uuidv4","numberInputId","handleChange","e","target","value","reset","onSubmit","preventDefault","some","toast","operation","htmlFor","type","placeholder","pattern","onChange","required","autoComplete","disabled","Text","p","Filter","Contact","ul","ContactItem","li","BtnDelete","ContactsList","useEffect","map","onClick","console","log","onDeleteContact","App","window","localStorage","setItem","JSON","stringify","autoClose","position","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qqBAEAA,IAAMC,SAASC,QAAU,8CAElB,IAQMC,EAAqB,SAACC,GACjC,OAAOJ,IAAMK,OAAN,mBAAyBD,KCLlCJ,IAAMC,SAASC,QAAU,8CAElB,I,cAAMI,EAAeC,YAC1B,wBAD0C,uCAE1C,WAAOC,EAAP,sBAAAC,EAAA,6DAAYC,EAAZ,EAAYA,gBAAZ,kBDPOV,IAAMW,IAAI,aCOjB,uBAEYC,EAFZ,EAEYA,KAFZ,kBAGWA,GAHX,yDAKWF,EAAgB,EAAD,KAL1B,yDAF0C,yDAY/BG,EAAaN,YACxB,sBADwC,uCAExC,yCAAAE,EAAA,6DAASK,EAAT,EAASA,KAAMC,EAAf,EAAeA,OAAYL,EAA3B,EAA2BA,gBAA3B,SAEUM,EAAa,CAAEF,OAAMC,UAF/B,SDhB8BE,ECmBaD,EDlBpChB,IAAMkB,KAAN,YAAwBD,GCe/B,uBAGYL,EAHZ,EAGYA,KAHZ,kBAIWA,GAJX,2DAMWF,EAAgB,EAAD,KAN1B,kCDhB6B,IAACO,ICgB9B,qBAFwC,yDAa7BE,EAAgBZ,YAC3B,yBAD2C,uCAE3C,WAAOH,EAAP,kBAAAK,EAAA,6DAAaC,EAAb,EAAaA,gBAAb,kBAEUP,EAAmBC,GAF7B,gCAGWA,GAHX,yDAKWM,EAAgB,EAAD,KAL1B,yDAF2C,yDC9BvCU,EAAgBC,YAAY,CAChCP,KAAM,WACNQ,aAAc,CACZC,MAAO,GACPC,OAAQ,GACRC,UAAU,EACVC,MAAO,MAETC,SAAU,CACRC,aAAc,SAACC,EAAOC,GACpBD,EAAML,OAASM,EAAOC,UAG1BC,eAAa,mBACV1B,EAAa2B,WAAY,SAACJ,EAAOC,GAChCD,EAAMN,MAAQO,EAAOC,QACrBF,EAAMK,OAAS,KACfL,EAAMH,MAAQ,QAJL,cAMVpB,EAAa6B,SAAU,SAACN,EAAOC,GAC9BD,EAAMK,OAAS,aAPN,cASV5B,EAAa8B,UAAW,SAACP,EAAOC,GAC/BD,EAAMK,OAAS,KACfL,EAAMH,MAAQ,WAXL,cAaVb,EAAWoB,WAAY,SAACJ,EAAOC,GAC9BD,EAAMN,MAAN,CAAeO,EAAOC,SAAtB,mBAAkCF,EAAMN,QACxCM,EAAMK,OAAS,KACfL,EAAMH,MAAQ,QAhBL,cAkBVb,EAAWsB,SAAU,SAACN,EAAOC,GAC5BD,EAAMK,OAAS,UACfL,EAAMH,MAAQ,QApBL,cAsBVb,EAAWuB,UAAW,SAACP,EAAOC,GAC7BD,EAAMK,OAAS,KACfL,EAAMH,MAAQ,WAxBL,cA0BVP,EAAcc,WAAY,SAACJ,EAAOC,GACjCD,EAAMN,MAAQM,EAAMN,MAAMC,QACxB,SAACP,GAAD,OAAaA,EAAQb,KAAO0B,EAAOC,cA5B5B,KAgDAH,EAAiBR,EAAciB,QAA/BT,aAEAR,IAAf,QCrDMkB,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAOdC,MAWaC,EARDC,YAAe,CAC3BC,QAAS,CACPC,SAAUC,GAEZf,aACAgB,UAAUC,I,sBC7BCC,EAAaC,IAAOC,IAAV,wRAYVC,EAAQF,IAAOG,GAAV,0H,eCJHC,EANG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,eAACP,EAAD,WACI,eAACG,EAAD,WAAO,cAAC,IAAD,IAAP,IAAuBG,KACtBC,M,gBCHIC,EAAcP,IAAOQ,GAAV,6HAOXC,EAAQT,IAAOU,MAAV,6SAcLC,EAASX,IAAOY,OAAV,mN,wBCtBNC,EAAY,SAACzC,GAAD,OAAWA,EAAMuB,SAAS5B,QACtC+C,GAAe,SAAC1C,GAAD,OAAWA,EAAMuB,SAASoB,WAEzCC,GAAc,SAAC5C,GAAD,OAAWA,EAAMuB,SAAS7B,OAExCmD,GAAqBC,YAChC,CAACF,GAAaH,IACd,SAAClB,EAAU5B,GACT,IAAMoD,EAAmBpD,EAAOqD,cAEhC,OAAOzB,EAAS5B,QAAO,SAACP,GAAD,OACrBA,EAAQH,KAAK+D,cAAcC,SAASF,SCF3B,SAASG,KACpB,MAAwBC,mBAAS,IAAjC,mBAAOlE,EAAP,KAAamE,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOjE,EAAP,KAAemE,EAAf,KAEM9B,EAAW+B,YAAYC,EAAUX,aACjCY,EAAWC,cAGXC,EAAcC,cACdC,EAAgBD,cAEhBE,EAAe,SAACC,GAClB,MAAwBA,EAAEC,OAAlB9E,EAAR,EAAQA,KAAM+E,EAAd,EAAcA,MAEd,OAAQ/E,GACJ,IAAK,OACDmE,EAAQY,GACR,MAEJ,IAAK,SACDX,EAAUW,GACV,MAEJ,QAAS,SAqCXC,EAAQ,WACVb,EAAQ,IACRC,EAAU,KAGd,OACI,uBAAMa,SAvCW,SAACJ,GAGlB,GAFAA,EAAEK,iBAEE5C,EAAS6C,MAAK,SAAChF,GAAD,OAAaA,EAAQH,OAASA,GAAQG,EAAQF,SAAWA,KAIvE,OAHAmF,IAAMxE,MAAN,UAAeZ,EAAf,eAA0BC,EAA1B,mCAEA+E,IAGAT,EAASc,EAAUtF,WAAW,CAC1BT,GAAIoF,cACJ1E,OACAC,YAEJ+E,KAyBJ,UACI,eAAC9B,EAAD,CAAaoC,QAASb,EAAtB,UAAmC,cAAC,IAAD,IAAnC,WACA,cAACrB,EAAD,CACImC,KAAK,OACLvF,KAAK,OACLwF,YAAY,aACZC,QAAQ,yHACRzC,MAAM,kcACN+B,MAAO/E,EACP0F,SAAUd,EACVtF,GAAImF,EACJkB,UAAQ,IAEZ,eAACzC,EAAD,CAAaoC,QAASX,EAAtB,UAAqC,cAAC,IAAD,IAArC,aACA,cAACvB,EAAD,CACImC,KAAK,MACLvF,KAAK,SACLwF,YAAY,eACZI,aAAa,MACbF,SAAUd,EACVa,QAAQ,yFACRzC,MAAM,giBACN+B,MAAO9E,EACPX,GAAIqF,EACJgB,UAAQ,IAEZ,eAACrC,EAAD,CACIiC,KAAK,SACLM,UAAW7F,IAASC,EAFxB,UAEgC,cAAC,IAAD,IAFhC,qBCrGL,I,SAAM6F,GAAOnD,IAAOoD,EAAV,6CC8BFC,GArBA,WACX,IAAMjB,EAAQV,YAAYC,EAAUd,WAC9Be,EAAWC,cAEjB,OACI,qCACI,cAACsB,GAAD,oCACA,cAAC1C,EAAD,CACImC,KAAK,OACLvF,KAAK,OACLwF,YAAY,iBACZC,QAAQ,yHACRzC,MAAM,kcACN+B,MAAOA,EACPW,SAXK,SAACb,GAAD,OAAON,EAASzD,EAAa+D,EAAEC,OAAOC,SAY3CY,UAAQ,QCxBXM,GAAUtD,IAAOuD,GAAV,0DAKPC,GAAcxD,IAAOyD,GAAV,ocAwBXC,GAAY1D,IAAOY,OAAV,mUCOP+C,GA5BM,WACjB,IAAMhE,EAAW+B,YAAYC,EAAUV,oBACjCW,EAAWC,cASjB,OAJA+B,qBAAU,WACNhC,EAASc,EAAU7F,kBACpB,CAAC+E,IAGA,cAAC0B,GAAD,UACK3D,EAASkE,KAAI,gBAAGlH,EAAH,EAAGA,GAAIU,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACV,eAACkG,GAAD,WACI,iCACI,cAAC,IAAD,IACCnG,EAFL,OAMA,+BAAOC,IACP,cAACoG,GAAD,CAAWI,QAAS,kBAnBZ,SAACnH,GACrBiF,EAASc,EAAUhF,cAAcf,IACjCoH,QAAQC,IAAIrH,GAiB0BsH,CAAgBtH,IAA1C,SAA+C,cAAC,IAAD,QARjCA,S,SCXnB,SAASuH,KACtB,IAAMvE,EAAW+B,YAAYV,IAK7B,OAJA4C,qBAAU,WACRO,OAAOC,aAAaC,QAAQ,WAAYC,KAAKC,UAAU5E,MACtD,CAACA,IAGF,eAAC,EAAD,CAAWU,MAAM,YAAjB,UACE,cAAC,IAAD,CAASmE,UAAW,IAAMC,SAAS,cACnC,cAACnD,GAAD,IACA,+BACE,cAAC,KAAD,IADF,eAGA,cAAC,GAAD,IACA,cAAC,GAAD,OChBNoD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUpF,MAAOA,EAAjB,SAEE,cAAC0E,GAAD,QAIJW,SAASC,eAAe,W","file":"static/js/main.318ae5ff.chunk.js","sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://611a85245710ca00173a1a7b.mockapi.io\";\n\nexport const fetchContacts = () => {\n  return axios.get(\"/contacts\");\n};\n\nexport const fetchAddContact = (contact) => {\n  return axios.post(`/contacts`, contact);\n};\n\nexport const fetchDeleteContact = (id) => {\n  return axios.delete(`contacts/${id}`);\n};\n","import axios from \"axios\";\nimport {\n  fetchContacts,\n  fetchAddContact,\n  fetchDeleteContact,\n} from \"../services/contactsApi.js\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = \"https://611a85245710ca00173a1a7b.mockapi.io\";\n\nexport const fetchContact = createAsyncThunk(\n  \"contacts/fetchContact\",\n  async (_, { rejectWithValue }) => {\n    try {\n      const { data } = await fetchContacts();\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const addContact = createAsyncThunk(\n  \"contacts/addContact\",\n  async ({ name, number }, { rejectWithValue }) => {\n    try {\n      const newContact = { name, number };\n      const { data } = await fetchAddContact(newContact);\n      return data;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const deleteContact = createAsyncThunk(\n  \"contacts/deleteContact\",\n  async (id, { rejectWithValue }) => {\n    try {\n      await fetchDeleteContact(id);\n      return id;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n","import { createSlice } from \"@reduxjs/toolkit\";\n// import { combineReducers } from \"redux\";\nimport { fetchContact, addContact, deleteContact } from \"../operation.js\";\n// import initialContacts from \"../../Data/contacts.json\";\n\nconst contactsSlice = createSlice({\n  name: \"contacts\",\n  initialState: {\n    items: [],\n    filter: \"\",\n    isLoding: false,\n    error: null,\n  },\n  reducers: {\n    changeFilter: (state, action) => {\n      state.filter = action.payload;\n    },\n  },\n  extraReducers: {\n    [fetchContact.fulfilled]: (state, action) => {\n      state.items = action.payload;\n      state.status = null;\n      state.error = null;\n    },\n    [fetchContact.pending]: (state, action) => {\n      state.status = \"loading\";\n    },\n    [fetchContact.rejected]: (state, action) => {\n      state.status = null;\n      state.error = \"Error\";\n    },\n    [addContact.fulfilled]: (state, action) => {\n      state.items = [action.payload, ...state.items];\n      state.status = null;\n      state.error = null;\n    },\n    [addContact.pending]: (state, action) => {\n      state.status = \"loading\";\n      state.error = null;\n    },\n    [addContact.rejected]: (state, action) => {\n      state.status = null;\n      state.error = \"Error\";\n    },\n    [deleteContact.fulfilled]: (state, action) => {\n      state.items = state.items.filter(\n        (contact) => contact.id !== action.payload\n      );\n    },\n  },\n});\n\n// const filterSlice = createSlice({\n// name: \"filter\",\n// initialState: initialState.filter,\n// reducers: {\n// changeFilter: (_, { payload }) => payload,\n// },\n// });\n\n// const rootReduser = combineReducers({\n// contacts: contactsSlice.reducer,\n// filter: filterSlice.reducer,\n// });\n\n// export const { addContact, deleteContact } = contactsSlice.actions;\nexport const { changeFilter } = contactsSlice.actions;\n\nexport default contactsSlice.reducer;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  // persistStore,\n  // persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nimport contactsReducer from \"../redux/slices/todo\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // myMiddlewar,\n  logger,\n];\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport default store;\n\n// import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n\n// import logger from \"redux-logger\";\n// import {\n//   persistStore,\n//   persistReducer,\n//   FLUSH,\n//   REHYDRATE,\n//   PAUSE,\n//   PERSIST,\n//   PURGE,\n//   REGISTER,\n// } from \"redux-persist\";\n// import storage from \"redux-persist/lib/storage\";\n\n// import rootReduser from \"./slices/todo\";\n\n// const persistConfig = {\n//   key: \"contacts\",\n//   storage,\n//   blacklist: [\"filter\"],\n// };\n\n// const middleware = [\n//   ...getDefaultMiddleware({\n//     serializableCheck: {\n//       ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n//     },\n//   }),\n//   logger,\n// ];\n\n// export const store = configureStore({\n//   reducer: {\n//     contacts: persistReducer(persistConfig, rootReduser),\n//   },\n//   middleware,\n//   devTools: process.env.NODE_ENV === \"development\",\n// });\n\n// export const persistor = persistStore(store);\n","import styled from \"@emotion/styled\";\r\nexport const Containers = styled.div`\r\n  min-width: 350px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 20px 50px;\r\n  background-color: #d2ffff;\r\n  box-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\n  border-radius: 5px;\r\n  &:hover{\r\n      box-shadow: 0px 0px 5px  rgba(0,0,0,0.5);\r\n  }\r\n`\r\nexport const Title = styled.h1`\r\n    text-align: center;\r\n   \r\n    color: #000;\r\n    font-weight: bold;\r\n    font-size: 42px;\r\n`","import { Containers, Title } from './Container.styles';\r\nimport { FaBookOpen } from 'react-icons/fa';\r\n\r\nconst Container = ({ title, children }) => (\r\n    <Containers>\r\n        <Title><FaBookOpen /> {title}</Title>\r\n        {children}\r\n    </Containers>\r\n);\r\nexport default Container;\r\n","import styled from \"@emotion/styled\";\r\n\r\n\r\nexport const TitleSecond = styled.h2`\r\nfont-size: 17px;\r\nfont-weight: 500;\r\nmargin: 0;\r\njustify-content:center;\r\npadding-bottom: 10px;\r\n`\r\nexport const Input = styled.input`\r\nmax-width:350px;\r\ndisplay: flex;\r\npadding:5px;\r\nmargin-bottom: 20px;\r\ncursor: pointer;\r\nborder:  solid 2px #c8e7f9;\r\nbox-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\nborder-radius:5px;\r\n&:hover{\r\n    border:  solid 2px #79e000;\r\n    box-shadow: 0 0 20px rgba(121, 224, 0, 0.5);\r\n}`\r\n\r\nexport const Button = styled.button`\r\npadding: 5px;\r\nborder:  solid 2px #6b6a6a4c;\r\nborder-radius:5px;\r\n&:hover{\r\n    color: #09c3e4;\r\n    border: solid 2px #79e000;\r\n    box-shadow: 0 0 20px rgba(121, 224, 0, 0.5); \r\n}\r\n`","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getFilter = (state) => state.contacts.filter;\nexport const getIsLoading = (state) => state.contacts.isLoading;\n\nexport const getContacts = (state) => state.contacts.items;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\n// export const getVisibleContacts = (state) => {\n// const contacts = getContacts(state);\n// const filter = getFilter(state);\n// const normalizedFilter = filter.toLowerCase();\n//\n// return contacts.filter((contact) =>\n// contact.name.toLowerCase().includes(normalizedFilter)\n// );\n// };\n//\n","import { useState } from 'react';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport toast from \"react-hot-toast\";\r\nimport { Input, TitleSecond, Button } from './Form.styles';\r\nimport { FiUser, FiPhoneCall } from 'react-icons/fi';\r\nimport { AiOutlineUserAdd } from 'react-icons/ai';\r\nimport { operation, selectors } from \"../../redux\";\r\n\r\n\r\n\r\nexport default function Form() {\r\n    const [name, setName] = useState('');\r\n    const [number, setNumber] = useState('');\r\n\r\n    const contacts = useSelector(selectors.getContacts);\r\n    const dispatch = useDispatch(); \r\n\r\n\r\n    const nameInputId = uuidv4();\r\n    const numberInputId = uuidv4();\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        switch (name) {\r\n            case 'name':\r\n                setName(value);\r\n                break;\r\n      \r\n            case 'number':\r\n                setNumber(value);\r\n                break;\r\n      \r\n            default: return;\r\n        }\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (contacts.some((contact) => contact.name === name || contact.number === number)) {\r\n            toast.error(`${name} or ${number} already in the contacts.`);\r\n            \r\n            reset();\r\n            return;\r\n        } else {\r\n            dispatch(operation.addContact({\r\n                id: uuidv4(),\r\n                name,\r\n                number,\r\n            }))\r\n            reset();\r\n        };\r\n\r\n        // if (contacts.some((contact) => contact.name === name)) {\r\n            // toast.error(`${name} already in the contacts.`);\r\n            // reset();\r\n            // return;\r\n        // }\r\n        //  if (contacts.some((contact) => contact.number === number)) {\r\n            //  toast.error(`${number} already in the contacts.`);\r\n            //  reset();\r\n            //  return;\r\n        // };\r\n\r\n        // dispatch(actions.addContact({ name, number }));\r\n\r\n        // reset();\r\n    };\r\n\r\n    const reset = () => {\r\n        setName('')\r\n        setNumber('')\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <TitleSecond htmlFor={nameInputId}><FiUser /> Name</TitleSecond>\r\n            <Input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                placeholder=\"Enter name\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                value={name}\r\n                onChange={handleChange}\r\n                id={nameInputId}\r\n                required\r\n            />\r\n            <TitleSecond htmlFor={numberInputId}><FiPhoneCall /> Number</TitleSecond>\r\n            <Input\r\n                type=\"tel\"\r\n                name='number'\r\n                placeholder='Enter number'\r\n                autoComplete='all'\r\n                onChange={handleChange}\r\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                value={number}\r\n                id={numberInputId}\r\n                required\r\n            />\r\n            <Button\r\n                type=\"submit\"\r\n                disabled={!name || !number}><AiOutlineUserAdd /> Add contact</Button>\r\n        </form>\r\n\r\n    )\r\n\r\n}\r\n// Form.propTypes = {\r\n    // onSubmit: PropTypes.func.isRequired,\r\n// }","import styled from \"@emotion/styled\";\r\n\r\nexport const Text = styled.p`\r\nfont-size:20px;\r\n`","// import PropTypes from 'prop-types';\r\nimport { Input } from '../Form/Form.styles';\r\nimport { Text } from './Filter.styles';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import { getFilter } from '../../redux/selectors';\r\n// import * as actions from '../../redux/actions.js';\r\nimport { changeFilter } from '../../redux/slices/todo';\r\nimport { selectors } from \"../../redux\";\r\n\r\n\r\n\r\nconst Filter = () => {\r\n    const value = useSelector(selectors.getFilter);\r\n    const dispatch = useDispatch();\r\n    const onChange = (e) => dispatch(changeFilter(e.target.value));\r\n    return (\r\n        <>\r\n            <Text>Find contacts by name</Text>\r\n            <Input\r\n                type='text'\r\n                name='name'\r\n                placeholder=\"Name to search\"\r\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                value={value}\r\n                onChange={onChange}\r\n                required>\r\n                \r\n            </Input>\r\n        </>\r\n    )\r\n}\r\nexport default Filter;","import styled from '@emotion/styled'\r\n\r\nexport const Contact = styled.ul`\r\nwidth: 320px;\r\npadding: 0;\r\n`\r\n\r\nexport const ContactItem = styled.li`\r\n display: flex;\r\n align-items: center;\r\n font-style: normal;\r\n font-weight: normal;\r\n width: 100%;\r\n margin: 0 auto;\r\n padding: 5px 5px;\r\n font-size: 16px;\r\n text-transform: capitalize;\r\n justify-content: left;\r\n & span {\r\n    display: inline-flex;\r\n    align-items: center;\r\n    font-weight: 600;   \r\n    &:first-of-type {      \r\n      margin-right: 10px;\r\n    }\r\n    & svg {\r\n      margin-right: 10px;     \r\n    }\r\n  }\r\n`\r\n\r\nexport const BtnDelete = styled.button`\r\ndisplay: block;\r\nmargin-left: auto;\r\npadding: 5px;\r\nbackground-color: #c8e7f9;\r\nborder: solid 2px #c8e7f9;\r\nbox-shadow: 1px 1px 3px rgba(0,0,0,0.5);\r\nborder-radius: 10%;\r\n&:hover{\r\n    color: #79e000;\r\n    border:  solid 2px #79e000;\r\n    box-shadow: 1px 2px 2px 0 rgba(121, 224, 0, 0.5);\r\n}\r\n`\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// import { fetchContact, deleteContact } from '../../redux/operation.js';\r\nimport { Contact, ContactItem, BtnDelete } from './ContactsList.styles';\r\nimport { AiOutlineDelete, AiOutlineUser } from 'react-icons/ai';\r\n// import * as actions from \"../../redux/actions.js\";\r\n// import { getVisibleContacts } from \"../../redux/selectors.js\";\r\nimport { operation, selectors } from \"../../redux\";\r\n\r\n\r\nconst ContactsList = () => {\r\n    const contacts = useSelector(selectors.getVisibleContacts);\r\n    const dispatch = useDispatch();\r\n    const onDeleteContact = (id) => {\r\n        dispatch(operation.deleteContact(id));\r\n        console.log(id);\r\n    }\r\n    useEffect(() => {\r\n        dispatch(operation.fetchContact())\r\n    }, [dispatch])\r\n   \r\n    return (\r\n        <Contact>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <ContactItem key={id}>\r\n                    <span>\r\n                        <AiOutlineUser />\r\n                        {name}:\r\n                    </span>\r\n                    \r\n                    \r\n                    <span>{number}</span>\r\n                    <BtnDelete onClick={() => onDeleteContact(id)}><AiOutlineDelete /></BtnDelete>\r\n                </ContactItem>\r\n            ))}\r\n        </Contact>\r\n    )\r\n}\r\nexport default ContactsList;","// import { useState, useEffect, useRef } from \"react\";\n// import { v4 as uuidv4 } from \"uuid\";\nimport { Toaster } from \"react-hot-toast\";\nimport Container from \"./Container\";\nimport Form from \"./Form\";\nimport Filter from \"./Filter/Filter.jsx\";\nimport ContactsList from \"./ContactsList/ContactsList.jsx\";\nimport { GrContactInfo } from \"react-icons/gr\";\n// import ContactsJson from \"../Data/contacts.json\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getContacts } from \"../redux/selectors\";\n\nexport default function App() {\n  const contacts = useSelector(getContacts);\n  useEffect(() => {\n    window.localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <Container title=\"Phonebook\">\n      <Toaster autoClose={4000} position=\"top-right\" />\n      <Form />\n      <h2>\n        <GrContactInfo /> Contacts\n      </h2>\n      <Filter />\n      <ContactsList />\n    </Container>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport { Provider } from \"react-redux\";\n// import { PersistGate } from \"redux-persist/integration/react\";\n// import * as store from \"./redux/store\";\nimport store from \"./redux/store\";\n\nimport App from \"./component/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}